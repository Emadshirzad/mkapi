<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\View;
use Illuminate\Support\Str;

class SecureHeadersMiddleware
{
    public function handle(Request $request, Closure $next)
    {
        // Use nonce from Nginx or generate a random one
        $nonce = $request->header('X-CSP-Nonce', Str::random(32));
        View::share('cspNonce', $nonce);

        // Prepare security headers
        $cspDirectives = [
            "default-src 'self'",
            "script-src 'nonce-$nonce' https://challenges.cloudflare.com",
            "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com",
            "child-src 'self' https://challenges.cloudflare.com",
            "img-src 'self' data:",
            "font-src 'self'",
            "base-uri 'self'",
            "connect-src 'self' api.iconify.design",
            "form-action 'self'",
        ];

        $response = $next($request);

        // $response->headers->set('Content-Security-Policy', implode('; ', $cspDirectives));
        // $response->headers->set('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload'); // Enforce HTTPS
        // $response->headers->set('X-Frame-Options', 'DENY'); // Prevent Clickjacking
        // $response->headers->set('X-Content-Type-Options', 'nosniff'); // Prevent MIME type sniffing
        // $response->headers->set('Referrer-Policy', 'strict-origin-when-cross-origin'); // Restrict referrer info
        // $response->headers->set('Permissions-Policy', 'geolocation=(), microphone=(), camera=()'); // Disable unnecessary browser features

        // Share nonce with Blade templates
        view()->share('cspNonce', $nonce);

        return $response;
    }
}
